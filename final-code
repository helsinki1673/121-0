// WeMos D1 R1
#include <Servo.h>
#include <WemosInit.h>

#define motor1pin D3
#define motor2pin D4

 
Servo leftmotor;
Servo rightmotor;
long durFront, cmFront, durLeft, cmLeft, durRight, cmRight;
int location;
int stage = 0;//Used during testing to check master code
int rightangle = 308;//timing used to turn right angle

void master(int time) {//MASTER CODE: hits all of the buttons starting from Master Location
      delay(1000);
  leftmotor.write(105); // go forwards to hit D
  rightmotor.write(105);
      delay(1700);
   Serial.println("Stage 0");
   
   
  rightmotor.write(80); // Go backwards to hit A!
  leftmotor.write(80);
      delay(3200);
   Serial.println("Stage 1");

  
  leftmotor.write(105); // Go forwards again to start moving past the wall!
  rightmotor.write(105);
     delay(1500);
   Serial.println("Stage 2");


  leftmotor.write(90); // Once adequately past the wall, stop, turn left! Stop!
  rightmotor.write(90);
    delay(1000);
  leftmotor.write(65);
  rightmotor.write(115);
    delay(rightangle);
  rightmotor.write(90);
  leftmotor.write(90);
    delay(1000);
   Serial.println("Stage 3");
    stage=4;
 

 
  rightmotor.write(105);//forward across table, pause
  leftmotor.write(105);
     delay(2800);  
   Serial.println("Stage 4");
 
  leftmotor.write(90);
  rightmotor.write(90); // Once positioned in front of the targets, stop! Turn Right! Stop!
    delay(1000);
  leftmotor.write(115);//turn right
  rightmotor.write(65);
    delay(rightangle);
  rightmotor.write(90);
  leftmotor.write(90);
    delay(1000);
    stage=5;

    leftmotor.write(105);//forwards to hit C
    rightmotor.write(105);
    delay(1300);
     Serial.println("Stage 5");


    leftmotor.write(80); // Move backwards to hit B
    rightmotor.write(80);
    delay(3200);
    leftmotor.write(90);
    rightmotor.write(90);
//END OF MASTER CODE
  
}
 
void finish(int time) {//Code to return to starting location
  switch (location) {
  case 1:
  leftmotor.write(105);
  rightmotor.write(105);//forwards
  delay(1500);
  leftmotor.write(90);
  rightmotor.write(90);
  delay(100);
  leftmotor.write(102);
  rightmotor.write(80);//turn right
  delay(520);
  leftmotor.write(90);
  rightmotor.write(90);
  delay(100);
  leftmotor.write(105);
  rightmotor.write(105);//forwards across table
  delay(3500);
  leftmotor.write(90);
  rightmotor.write(90);
  delay(100);
  leftmotor.write(102);
  rightmotor.write(80);//turn right
  delay(520);
  rightmotor.write(90);
  leftmotor.write(90);
  delay(100);
  rightmotor.write(105);
  leftmotor.write(103);//forwards
  delay(800);
  leftmotor.write(90);
  rightmotor.write(90);

   
break;
 
  case 2:
  
 leftmotor.write(65);
  rightmotor.write(115);//turn left
    delay(520);
  rightmotor.write(90);
  leftmotor.write(90);
rightmotor.write(105);
leftmotor.write(105);//forwards
delay(300);
rightmotor.write(90);
leftmotor.write(90);

      
break;
 
  case 3:
   leftmotor.write(100);
   rightmotor.write(107);//forwards slightly left
   delay(800);
   leftmotor.write(90);
   rightmotor.write(90);
   
break;
   
  case 4:
   leftmotor.write(105);
   rightmotor.write(105);//forwards
   delay(1500);
     leftmotor.write(90);
  rightmotor.write(90);
  delay(100);
  leftmotor.write(102);
  rightmotor.write(80);//turn right
  delay(525);
  leftmotor.write(90);
  rightmotor.write(90);
  delay(100);
   leftmotor.write(105);
   rightmotor.write(105);//forwards across table
   delay(5000);
    rightmotor.write(102);
  leftmotor.write(80);//turn left
  delay(525);
  leftmotor.write(90);
  rightmotor.write(90);
  delay(100);
   leftmotor.write(105);
   rightmotor.write(105);//forwards to 4
   delay(500);

break;
  }
}
 
 
void determine(int time) {//Code to determine starting location
  durLeft = ultrasonicPing(D8,D6);
  durRight = ultrasonicPing(D9,D7);
  cmLeft = (durLeft/2) / 29.1;
  cmRight = (durRight/2) / 29.1;
 
if(cmLeft >= 60 && cmRight <= 14)  {
location = 3;
//point 3
Serial.println("Location 3");
  }
 
else if(cmLeft <=14 && cmRight <=60) {
location = 2;
Serial.println("Location 2");
// POINT 2
  }
 
else if(cmRight <=14 && cmLeft <= 60)  {
location = 1;
Serial.println("Location 1");
// POINT 1
  }
 
else if(cmRight >=60 && cmLeft <= 14) {
location = 4;
// POINT 4
Serial.println("Location 4");
  }
else {
  Serial.println("This code did not work properly.");
}
}
 
 
void setup()
{
  Serial.begin(115200); // starts serial communication
  //left
  pinMode(D8, OUTPUT); // defines trigPin as an output and echo as an input
  pinMode(D6, INPUT);
  // front
  pinMode(D10, OUTPUT);
  pinMode(D5, INPUT);
  // right
  pinMode(D9, OUTPUT);
  pinMode(D7, INPUT);
 
  leftmotor.attach(motor1pin);
  rightmotor.attach(motor2pin);
  leftmotor.write(90);
  rightmotor.write(90);
  delay(10);
}
 
void loop()
{
delay(2000);
determine(1);//Determine starting location
delay(3000);
switch (location) {//Get to Master Location from starting location
  case 1:
  leftmotor.write(103);
  rightmotor.write(102);//forwards
  delay(1500);
  leftmotor.write(80);//turn left
  delay(530);
  leftmotor.write(90);//stop
  rightmotor.write(90);
  delay(1000);//stop for a second
  leftmotor.write(102);
  rightmotor.write(102);//forwards
  delay(1650);
  rightmotor.write(80);//turn right to face D
  delay(600);
  rightmotor.write(90);
  leftmotor.write(90);//stop
  delay(2000);
  
  Serial.println("Position 1 code finished running. Now executing master();.");
break;
 
  case 2:
  Serial.println("Position 2 code now running.");
  leftmotor.write(102);
  rightmotor.write(102);//forwards
  delay(1450);
  rightmotor.write(80);//turn right
  delay(520);
  leftmotor.write(90);//stop
  rightmotor.write(90);
  delay(500);//stop for a second
  leftmotor.write(102);
  rightmotor.write(102);//forwards across table
  delay(5300);
  leftmotor.write(80);//turn left to face D
  delay(500);
  rightmotor.write(90);
  leftmotor.write(90);//stop
  delay(2000);
  
    
    Serial.println("Position 2 code finished running. Now executing master();.");
break;
 
  case 3:
    leftmotor.write(102);
  rightmotor.write(102);//forwards
  delay(1300);
  leftmotor.write(80);//turn left
  delay(500);
  leftmotor.write(90);//stop
  rightmotor.write(90);
  delay(1000);//stop for a second
  leftmotor.write(102);
  rightmotor.write(102);//forwards across table
  delay(5300);
  leftmotor.write(80);//turn left to face D
  delay(500);
  rightmotor.write(90);
  leftmotor.write(90);//stop
  delay(2000);
  
    Serial.println("Position 3 code now running. CODE IN LATER");
    Serial.println("Position 3 code finished running. Now executing master();.");
break;
  case 4:
  leftmotor.write(102);
  rightmotor.write(102);//forwards
  delay(1050);
  rightmotor.write(80);//turn right
  delay(520);
  leftmotor.write(90);//stop
  rightmotor.write(90);
  delay(1000);//stop for a second
  leftmotor.write(102);
  rightmotor.write(102);//forwards
  delay(1550);
  rightmotor.write(80);//turn right to face D
  delay(610);
  rightmotor.write(90);
  leftmotor.write(90);//stop
  delay(2000);
  
 Serial.println("Position 4 code now running. CODE IN LATER");
 Serial.println("Position 4 code finished running. Now executing master();.");
break;
  } 
master(1000);//MASTER CODE
finish(1);//Return to starting location
}
